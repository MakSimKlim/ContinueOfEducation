// 230925_библиотека stl
//
// 4 основных компонента STL:
// Контейнер - блок для хранения данных, упрпавления ими и размещения
// Алгоритм - функция для работы с данными, хранящимися в контейнере
// Итератор - спец.указатель для перемещения по данным конкретного контейнера
// Функторы - механизм инкапсуляции функций в конкретном объекте для использования
// другими компонентами
// 
// Также есть:
// Аллокатор - распределитель памяти
// Предикат - функция нестандартного типа, используемая в контейнере
// Бывает унарный и бинарный, возвращает логическое значение
//
// =================================================================================
// 
// Умные (интеллектуальные ) указатели
// Выделение ресурса - это инициализация.
// 
// Ситуация, когда файлы не закрытись и не удаляется динамический массив
// после того как вызвалось exit().
// 
// int* a = new int[20];
// FILE* f2 = fopen("example2.txt", "w");
// FILE* f = fopen("example.txt", "w");
// if(f)
// {
// cout<<"Error";
// exit(0);
// }
// f.close(); // метод может быть не вызван
// f2.close();// метод может быть не вызван
// delete[] a;// метод может быть не вызван
// 
// Решением этой проблемы:
// создать класс
// в конструкторе класса выделять ресурсы(открывать файл)
// в деструкторе класса освобождать ресурсы(закрывать файл)
// для работы с ресурсами создавать экземпляр класса

// 

#include <iostream>
#include <fstream>
using namespace std;

class OpenFile
{
	FILE* f;
public:
	OpenFile(char* filename, char* filemode)
	{
		fopen_s(&f, filename, filemode);
		if (!f)
		{
			cout << "Couldn't open " << filename << endl;
			exit(1);
		}

	}
	~OpenFile()
	{
		fclose(f);
	}

	FILE* getFilePtr() { return f; }

};
int main()
{
	OpenFile myFile(const_cast<char*>("test.txt"), const_cast<char*>("w"));

	return 0;
}

