// 231006_паттерны программирования
//
//сложности при разработке ПО:
/*
Высокая сложность создаваемых систем:
-большие размеры
-большая функциональность
-требования пользователей часто меняются
-высокие требования к опыту пользователя

ООП - парадигма программирования.
Парадигма - это подход к концептуализации проекта, который определяет, как проводятся вычисления и как должна быть структурирована работа компьютера.

Декомпозиция -  процесс разбиения задачи на отдельные, структурно связанные части.
Процедурная д. - в задаче  выделяется алгоритмами и структурами данных.
Логическая д. - правила, связывающие определенные понятия.
ОО д. - в задаче выденляются классы объектов и их взаимодействие.

Абстрагирование - способность отделить логический смысл фрагмента программы от его реализации.

Модульность - метод создания и управления совокупности имён и связанными с ними значениями.
Суть модуля в разбиении пространства имён на открытую и закрытую чать (public, private)

Иерархия - упорядоченная система абстракций.


=====================  Парадигмы  ============================


       1. Процедурно-ориентированная парадигма
Мысль, что любую задачу можно записать, как последовательность простых действий, 
которую выполняет компьютер. Исходным понятием является алгоритм.
Алгоритм - последовательность действий направленная на достижение поставленной цели.
Блок-схемы. 
Процедура - алгоритм, применительный к решению задач на компьютере.
Разработка больших программ потребовала разбиения их на небольшие последовательности инструкций. 
Основой для их разбиения и стала процедурная декомпозиция.
ПРограмма разбивается на отдельные части - модули.
Особенность процедурного программирования состоит в выделении моментов начала и конца.
Для выполнения текущей процедуры требуется завершение выполнения инструкций предыдущей.
Изменение этого порядка действий потребовало включения специального синтаксиса:
if -else и goto.
Спагетти код - сложный и запутанный код с применением goto.
Хорошим стилем программирования считается отказ от goto
Методология структурного программирования - процедурная декомпозиция программной системы 
и организация отдельных модулей в виде совокупностивыполняемых процедур
В рамккахэтой методологии получило развитие нисходящее проектирование, 
оно же программирование сверху-вниз


       2. Объектно-ориентированное программирование
Фундаментальные понятия ООП - объект и класс.
Класс- это совокупность объектов, которые имеют одинаковые свойства и поведение. 
Объект - это экземпляр соответствующего класса.
Три основных принципа ООП - инкапсуляция, полиморфизм, наследование.
     - Инкапсуляция - сокрытие деталей внутреннего устройства класса от внешних 
по отношению к нему объектов или пользователей. Происходит от деления модуля на две части:
интерфейс (*.h) и реализацию (*.cpp).
     - Наследование- это принцип в соответствии с которым знание
о более общей котегории можно применить к более узкой категории.
     - Полиморфизм - способность некоторых объекутов применять различные 
внешние формы. В ООП это значит, что действия выполняемые одноименными методвами иогут
отличаться в зависимости от того, кому принадлежит метод
Объектно-ориентированная декомпозиция - отдельными структурнными единицами кода
являются не процедуры и функции, а классы и объекты, с их атрибутами и методами.
программа перестала быть последовательностью предопределенных действий.
Вместо программирования сверху-вниз программы стали событийно - ориентированными.
Это значит, что программа представляет собой бесконечный цикл ожидания
некоторых заранее определенных событий, исходящих от других программ или пользователей.

     
     3.Методология объектно-ориентированного анализа и проектирования (ООАП).
ООАП.
Процесс выделения компонентов предметной области называется концептуализацией.
Компонент - это некоторая абстрактная единица, обладающая функциональностью.
Аналитик (архитектор) - участвует в построении концептуальной схемы вместе
с разработчиками, которая в дальнейшем преобразуется в код.
 При посроении схемы выделяются компоненты, которые затем можно удобно 
 представить в виде классов и объектов.
 Такое разделение проецесса разработки привело к появлению
 концепции жизненного цикла программы.
 Это совокупность этапов разработки программы от разработки требований 
 до отказа от использования.
  - анализ предметной области и формулировка требований к программе
  - проектирование струкутуры программы.
  - реализация программного кода (программирование)
      1. тестирование (сливается с реализацией))
  - внедрение программы
  - сопровождение программы (выпуск патчей, обновлений и улучшений программы),
  это самый длительный процесс.
  - отказ от использования (стоимость сопровождения слишком высокая, устарела
  программа, изменилась платформа и т.д.)
Методология ООАП тесно связана с концепцией автоматизированной
разработки ПО (Computer Aided Software Engineering - CASE)


      4. Методология системного анализа и системного моделирования 
Система- совокупность объектов, компонентов или элементов произвольной природы, 
образующих некую целостность.
Предпосылка выделения некоей совокупности, как системы - это появление у неё 
свойств, неприсущих её элементам.
Структура и процесс функционирования.
Структура - устойчивая по времени совокупность внутренних взаимосвязей системы.
Структура может отражать вложенность элементов одной системы в другую.
В этом случае, вложенную малую систему называют подсистемой, 
а более крупную - метасистемой.
Важная характеристика системы - это состояние, то есть совокупность признаков
и свойств системы, котрые отражают её наиболее существенные особенности поведения
Процесс функционирования системы - последовательное изменение состояний этойй системы.
Соввокупность признаков при изменении состояния и условий его изменения
называется переходом.
Системно-ориентированная декомпозиция.
Важным является построение модели системы.
Процесс построения и применения моделей для получения информации о системе 
называется моделирование.
Наиболее общей моделью является модель - "черный ящик". В этой модели
система почти изолирована от окружающей среды, кроме существующих у неё входных 
воздействий. Также система оказывает воздействие нра другие системы через их входные воздействия.
Для этого она использует свои выходные воздействия.
Сложность системы можно описать как 
   - сложность структуры, то есть количество элементов и количество их взаимосвязей
   - сложность процессаа функционирования - как часто и при насколько предсказуемых
   и простых условиях меняются состояния


==============     Классы и объекты       ==========================

Объект - понятие, абстракция, или конкретная вещь с чётко очерченными границами,
которая имеет смысл в контексте рассматриваемой прикладной задаче,
Ведение объектов имеет две цели:
 - понимание прикладной задачи
 - ведение основы для реализации на компьютере.
 Объект обладает состоянием, поведением и индивидуальностью.
 Объекты существуют во времени, изменяются, имеют внутреннее состояние, могут быть 
 созданы, разрушены, разделены - то есть преходящи.
 Структура и поведение схожих объектов определяет для них общий класс.
 Состояние объекта - это перечень всех возможных свойств данного объекта 
 и текущие значения этих свойств. Обычно свойства статичны, а значение динамичны
 Поведение - последовательность совершаемых над объектом действий. Это то
 как объект воздействует на другие объекты, изменяя их состояние.



 












*/

